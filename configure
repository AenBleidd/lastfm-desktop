#!/bin/bash

source common/bash/utils.sh.inc
source common/bash/generate_ide_projects.sh.inc

while [ $# -gt 0 ]
do
    case "$1" in
        --debug)
            echo "The default is --debug, but let's pretend you made a difference anyway.";;
        --release)
            echo 'Will optimise and strip binaries.'
            RELEASE=1;;
		--3rdparty)
		    svn co svn+ssh://gimli.last.fm/svn/libs/cpp lib/3rdparty
			exit;;
        --help | -h | --usage)
            echo "There is one option, it is: --release"
            exit;;
        --dev-clean)
            mv Last.fm.xcodeproj /tmp
			svn-clean
			mv /tmp/Last.fm.xcodeproj .
            exit;;
    esac
    
    shift
done


header "Configuring Last.fm"

qCheck()
{
    while [ $# -gt 0 ]
    do
        $1 -v &> /dev/null
        if [[ $? != 127 ]]
        then
            # valid qmake output
            # QMake version 2.01a
            # Using Qt version 4.2.2 in /opt/qt/4.2.2/lib

            middle "Checking if $1 is the right version..."

            min=4
            $1 -v 2> /dev/null | grep -q "^Using Qt version 4.[$min-9]"
            
            if [[ $? == 0 ]]
            then
                QMAKE=$1
                return 0
            else
                QMAKE='toolow'
            fi
        fi
        shift
    done
}


qCheck qmake qmake-qt4


if [[ $QMAKE == 'toolow' ]]
then
	      ##########################################################################80-->
	echo "Your version of Qt seems to be too old, we require Qt 4.$min or above."
	echo
	echo "It is possible you have Qt3 and Qt4 both installed. Locate your Qt4 installation"
	echo "and ensure it is placed first in the path, eg:"
	echo
	echo "	PATH=/opt/qt4/bin:\$PATH ./configure"
	echo
	echo "However this configure script is very basic, perhaps we got it wrong.."
	echo "Try typing the following, perhaps it will build for you :)"
	echo
	echo "	qmake -config release && make"
	exit 1
elif [[ $QMAKE == '' ]]
then
    echo "Sorry, qmake was not found, is Qt4 installed?"
    exit 2
fi


header 'Generating Build System'

if [ $RELEASE ]
then
    qmake -config release -recursive "CONFIG -= debug debug_and_release" Last.fm.pro
    which nmake &> /dev/null && BUILD_CMD='nmake' || BUILD_CMD='make'

    case `uname` in
        Darwin)
		cat <<HEREDOC>>Makefile

CONTENTS_DIR=_bin/Last.fm.app/Contents
RESOURCES_DIR=\$(CONTENTS_DIR)/Resources
PLUGINS_DIR=\$(CONTENTS_DIR)/MacOS/plugins
QT_LIB_DIR=/opt/qt/4.4.3-release/lib

dmg: all misc
	cd app/client && make -f Makefile dmg
bundle: all misc
	cd app/client && make -f Makefile bundle
install: all misc
	cd app/client && make -f Makefile bundle-install
misc: \$(RESOURCES_DIR)/AudioScrobbler.bundle \$(RESOURCES_DIR)/twiddly \$(PLUGINS_DIR)/libresolver.1.dylib
\$(RESOURCES_DIR):
	mkdir \$@
\$(RESOURCES_DIR)/AudioScrobbler.bundle: |\$(RESOURCES_DIR)
	xcodebuild -configuration Deployment -project plugins/iTunes/_iTunes.xcodeproj
	cp -R plugins/iTunes/build/Deployment/AudioScrobbler.bundle \$@
\$(CONTENTS_DIR)/MacOS/twiddly: _bin/twiddly
	common/dist/mac/deposx.sh _bin/twiddly \$(QT_LIB_DIR)
	cp _bin/twiddly \$@
\$(RESOURCES_DIR)/twiddly: \$(CONTENTS_DIR)/MacOS/twiddly
	cd \$(RESOURCES_DIR) && ln -s ../MacOS/twiddly
\$(PLUGINS_DIR):
	mkdir \$@
\$(PLUGINS_DIR)/libresolver.1.dylib: _bin/libresolver.1.dylib |\$(PLUGINS_DIR)
	common/dist/mac/deposx.sh _bin/libresolver.1.dylib \$(QT_LIB_DIR)
	cp _bin/libresolver.1.dylib \$@
HEREDOC

	esac
else
    case `uname` in
        Darwin)
            gen_xcodeproj || die "Configure failed."
            BUILD_CMD='open Last.fm.xcodeproj';;
        Linux)
            qmake -config debug -recursive Last.fm.pro "CONFIG += warn_off" || die "Configure failed."
            BUILD_CMD='make'
            middle "Configured to produce a debug build.";;
        *)      
            svn co svn+ssh://gimli.last.fm/svn/clientside/bin/win _bin
            gen_vs_sln || die "Configure failed."
            BUILD_CMD='cygstart Last.sln';;
    esac
fi

echo
echo 'Good, your configure is finished!'
echo "Now type '$BUILD_CMD' to complete the awesome cycle."

rmdir _build build &> /dev/null
